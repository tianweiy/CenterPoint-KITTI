2022-01-31 00:16:03,801   INFO  **********************Start logging**********************
2022-01-31 00:16:03,801   INFO  CUDA_VISIBLE_DEVICES=ALL
2022-01-31 00:16:03,801   INFO  cfg_file         /home/koraykoca34/CenterPoint-KITTI/tools/cfgs/kitti_models/centerpoint.yaml
2022-01-31 00:16:03,801   INFO  batch_size       4
2022-01-31 00:16:03,801   INFO  epochs           120
2022-01-31 00:16:03,801   INFO  workers          4
2022-01-31 00:16:03,801   INFO  extra_tag        default
2022-01-31 00:16:03,801   INFO  ckpt             None
2022-01-31 00:16:03,801   INFO  pretrained_model None
2022-01-31 00:16:03,801   INFO  launcher         none
2022-01-31 00:16:03,801   INFO  tcp_port         18888
2022-01-31 00:16:03,802   INFO  sync_bn          False
2022-01-31 00:16:03,802   INFO  fix_random_seed  False
2022-01-31 00:16:03,802   INFO  ckpt_save_interval 1
2022-01-31 00:16:03,802   INFO  local_rank       0
2022-01-31 00:16:03,802   INFO  max_ckpt_save_num 100
2022-01-31 00:16:03,802   INFO  merge_all_iters_to_one_epoch False
2022-01-31 00:16:03,802   INFO  set_cfgs         None
2022-01-31 00:16:03,802   INFO  max_waiting_mins 0
2022-01-31 00:16:03,802   INFO  start_epoch      0
2022-01-31 00:16:03,802   INFO  save_to_file     False
2022-01-31 00:16:03,802   INFO  set_size         100.0
2022-01-31 00:16:03,802   INFO  bifpn            [128, 64]
2022-01-31 00:16:03,802   INFO  bifpn_skip       True
2022-01-31 00:16:03,802   INFO  testmode         False
2022-01-31 00:16:03,802   INFO  eval             False
2022-01-31 00:16:03,802   INFO  clear            False
2022-01-31 00:16:03,803   INFO  cfg.ROOT_DIR: /home/koraykoca34/CenterPoint-KITTI
2022-01-31 00:16:03,803   INFO  cfg.LOCAL_RANK: 0
2022-01-31 00:16:03,803   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2022-01-31 00:16:03,803   INFO  
cfg.DATA_CONFIG = edict()
2022-01-31 00:16:03,803   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2022-01-31 00:16:03,803   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2022-01-31 00:16:03,803   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
2022-01-31 00:16:03,803   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2022-01-31 00:16:03,803   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2022-01-31 00:16:03,803   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2022-01-31 00:16:03,803   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.INFO_PATH.demo: ['kitti_infos_test.pkl']
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2022-01-31 00:16:03,804   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:20', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2022-01-31 00:16:03,804   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2022-01-31 00:16:03,804   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2022-01-31 00:16:03,805   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.05, 0.05, 0.1], 'MAX_POINTS_PER_VOXEL': 5, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2022-01-31 00:16:03,805   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2022-01-31 00:16:03,805   INFO  
cfg.MODEL = edict()
2022-01-31 00:16:03,805   INFO  cfg.MODEL.NAME: CenterPoint
2022-01-31 00:16:03,805   INFO  
cfg.MODEL.VFE = edict()
2022-01-31 00:16:03,805   INFO  cfg.MODEL.VFE.NAME: MeanVFE
2022-01-31 00:16:03,805   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2022-01-31 00:16:03,805   INFO  cfg.MODEL.BACKBONE_3D.NAME: VoxelBackBone8x
2022-01-31 00:16:03,805   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2022-01-31 00:16:03,805   INFO  cfg.MODEL.MAP_TO_BEV.NAME: HeightCompression
2022-01-31 00:16:03,805   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 256
2022-01-31 00:16:03,805   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2022-01-31 00:16:03,806   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2022-01-31 00:16:03,806   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [5]
2022-01-31 00:16:03,806   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [1]
2022-01-31 00:16:03,806   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [128]
2022-01-31 00:16:03,806   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [2]
2022-01-31 00:16:03,806   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [256]
2022-01-31 00:16:03,806   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2022-01-31 00:16:03,806   INFO  cfg.MODEL.DENSE_HEAD.NAME: CenterHead
2022-01-31 00:16:03,806   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2022-01-31 00:16:03,806   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: False
2022-01-31 00:16:03,806   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2022-01-31 00:16:03,806   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MAX_OBJS: 100
2022-01-31 00:16:03,806   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.VOXEL_SIZE: [0.05, 0.05, 0.1]
2022-01-31 00:16:03,806   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.OUT_SIZE_FACTOR: 4
2022-01-31 00:16:03,807   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.GAUSSIAN_OVERLAP: 0.1
2022-01-31 00:16:03,807   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MIN_RADIUS: 2
2022-01-31 00:16:03,807   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2022-01-31 00:16:03,807   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2022-01-31 00:16:03,807   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2022-01-31 00:16:03,807   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2022-01-31 00:16:03,807   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2022-01-31 00:16:03,807   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2022-01-31 00:16:03,807   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2022-01-31 00:16:03,807   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2022-01-31 00:16:03,807   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.3
2022-01-31 00:16:03,807   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2022-01-31 00:16:03,807   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2022-01-31 00:16:03,808   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2022-01-31 00:16:03,808   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2022-01-31 00:16:03,808   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2022-01-31 00:16:03,808   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2022-01-31 00:16:03,808   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2022-01-31 00:16:03,808   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2022-01-31 00:16:03,808   INFO  
cfg.OPTIMIZATION = edict()
2022-01-31 00:16:03,808   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 8
2022-01-31 00:16:03,808   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2022-01-31 00:16:03,808   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2022-01-31 00:16:03,808   INFO  cfg.OPTIMIZATION.LR: 0.003
2022-01-31 00:16:03,808   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2022-01-31 00:16:03,808   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2022-01-31 00:16:03,809   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2022-01-31 00:16:03,809   INFO  cfg.TAG: centerpoint
2022-01-31 00:16:03,809   INFO  cfg.EXP_GROUP_PATH: home/koraykoca34/CenterPoint-KITTI/tools/cfgs/kitti_models
2022-01-31 00:16:04,003   INFO  Database filter by min points Car: 14357 => 13532
2022-01-31 00:16:04,004   INFO  Database filter by min points Pedestrian: 2207 => 2168
2022-01-31 00:16:04,004   INFO  Database filter by min points Cyclist: 734 => 705
2022-01-31 00:16:04,024   INFO  Database filter by difficulty Car: 13532 => 10759
2022-01-31 00:16:04,028   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2022-01-31 00:16:04,029   INFO  Database filter by difficulty Cyclist: 705 => 581
2022-01-31 00:16:04,120   INFO  Loading KITTI dataset
2022-01-31 00:16:04,239   INFO  Total samples for KITTI dataset: 3712
2022-01-31 00:16:08,104   INFO  CenterPoint(
  (vfe): MeanVFE()
  (backbone_3d): VoxelBackBone8x(
    (conv_input): SparseSequential(
      (0): SubMConv3d()
      (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (conv1): SparseSequential(
      (0): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv2): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv3): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv4): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv_out): SparseSequential(
      (0): SparseConv3d()
      (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (map_to_bev_module): HeightCompression()
  (pfe): None
  (backbone_2d): BaseBEVBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
        )
        (1): Sequential(
          (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (3): Sequential(
          (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (4): Sequential(
          (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (5): Sequential(
          (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(128, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (bifpn): BiFPN_Network_SkipConnections(
      (final_convs): ModuleList(
        (0): ModuleList(
          (0): Sequential(
            (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (2): Sequential(
            (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (2): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
      )
      (layers): ModuleList(
        (0): BiFPN(
          (p5_inp_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p5_out_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p4_inp_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p4_td_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p4_out_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p3_inp_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p3_out_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p4_upsample): Upsample(scale_factor=2.0, mode=nearest)
          (p3_downsample): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        )
        (1): BiFPN(
          (p5_inp_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p5_out_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p4_inp_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p4_td_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p4_out_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p3_inp_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (p3_out_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
      )
    )
    (last_block): Sequential(
      (0): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (dense_head): CenterHead(
    (conv_cls): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
    (conv_box): Conv2d(256, 8, kernel_size=(1, 1), stride=(1, 1))
    (loss_cls): GaussianFocalLoss()
  )
  (point_head): None
  (roi_head): None
)
2022-01-31 00:16:08,221   INFO  Loading KITTI dataset
2022-01-31 00:16:08,485   INFO  Total samples for KITTI dataset: 3769
2022-01-31 00:16:08,485   INFO  **********************Start training home/koraykoca34/CenterPoint-KITTI/tools/cfgs/kitti_models/centerpoint(default)**********************
2022-02-01 19:03:00,490   INFO  **********************End training home/koraykoca34/CenterPoint-KITTI/tools/cfgs/kitti_models/centerpoint(default)**********************



